{"ast":null,"code":"import _objectSpread from \"/Users/sam/Documents/react-apps/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/sam/Documents/react-apps/todo/src/components/app/app.js\";\nimport React, { Component } from 'react';\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport TodoList from \"../todo-list\";\nimport ItemStatusFilter from \"../item-status-filter\";\nimport AddItemForm from \"../add-item-form\";\nimport './app.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTodoItem('Drink Coffee'), this.createTodoItem('Make Awesome App'), this.createTodoItem('Have a lunch')],\n      searchKeyword: '',\n      filter: 'all' // all, active, done\n\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const itemIndex = todoData.findIndex(item => item.id === id);\n        const newArray = [...todoData.slice(0, itemIndex), ...todoData.slice(itemIndex + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(({\n        todoData\n      }) => {\n        const newTodoData = [...todoData, newItem];\n        return {\n          todoData: newTodoData\n        };\n      });\n    };\n\n    this.toggleImportant = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'important')\n        };\n      });\n    };\n\n    this.toggleDone = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'done')\n        };\n      });\n    };\n\n    this.onSearchChange = searchKeyword => {\n      this.setState({\n        searchKeyword\n      });\n    };\n\n    this.onFilterChange = filter => {\n      this.setState({\n        filter\n      });\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  toggleProperty(items, id, propertyName) {\n    const itemIndex = items.findIndex(item => item.id === id);\n    const item = items[itemIndex];\n\n    const newItem = _objectSpread({}, item, {\n      [propertyName]: !item[propertyName]\n    });\n\n    return [...items.slice(0, itemIndex), newItem, ...items.slice(itemIndex + 1)];\n  }\n\n  search(todoData, searchKeyword) {\n    if (!searchKeyword) {\n      return todoData;\n    }\n\n    return todoData.filter(item => item.label.toLowerCase().includes(searchKeyword.toLowerCase()));\n  }\n\n  filter(todoData, filter) {\n    switch (filter) {\n      case 'all':\n        return todoData;\n\n      case 'active':\n        return todoData.filter(item => !item.done);\n\n      case 'done':\n        return todoData.filter(item => item.done);\n\n      default:\n        return todoData;\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          todoData = _this$state.todoData,\n          searchKeyword = _this$state.searchKeyword,\n          filter = _this$state.filter;\n    const visibleItems = this.filter(this.search(todoData, searchKeyword), filter);\n    const countDone = todoData.filter(item => item.done).length;\n    const todoCount = todoData.length - countDone;\n    return React.createElement(\"div\", {\n      className: \"todo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      toDo: todoCount,\n      done: countDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(SearchPanel, {\n      onChangeSearchInput: this.onSearchChange,\n      searchKeyword: searchKeyword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(ItemStatusFilter, {\n      filter: filter,\n      onFilterChange: this.onFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(AddItemForm, {\n      onAddItem: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      todoItemsData: visibleItems,\n      onDeleted: this.deleteItem,\n      onToggleImportant: this.toggleImportant,\n      onToggleDone: this.toggleDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/sam/Documents/react-apps/todo/src/components/app/app.js"],"names":["React","Component","AppHeader","SearchPanel","TodoList","ItemStatusFilter","AddItemForm","App","maxId","state","todoData","createTodoItem","searchKeyword","filter","deleteItem","id","setState","itemIndex","findIndex","item","newArray","slice","addItem","text","newItem","newTodoData","toggleImportant","toggleProperty","toggleDone","onSearchChange","onFilterChange","label","important","done","items","propertyName","search","toLowerCase","includes","render","visibleItems","countDone","length","todoCount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport TodoList from \"../todo-list\";\nimport ItemStatusFilter from \"../item-status-filter\";\nimport AddItemForm from \"../add-item-form\";\n\nimport './app.css';\n\nexport default class App extends Component {\n\n    maxId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Make Awesome App'),\n            this.createTodoItem('Have a lunch')\n        ],\n        searchKeyword: '',\n        filter: 'all' // all, active, done\n\n    };\n\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: this.maxId++\n        };\n    }\n\n    deleteItem = (id) => {\n        this.setState(({ todoData }) => {\n            const itemIndex = todoData.findIndex((item) => item.id === id);\n\n            const newArray = [\n                ...todoData.slice(0, itemIndex),\n                ...todoData.slice(itemIndex + 1)\n            ];\n\n            return {\n                todoData: newArray\n            };\n        });\n    };\n\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text);\n\n        this.setState(( { todoData } ) => {\n            const newTodoData = [\n                ...todoData,\n                newItem\n            ];\n\n            return {\n                todoData: newTodoData\n            };\n        });\n    };\n\n    toggleImportant = (id) => {\n        this.setState(({ todoData }) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'important')\n            };\n        });\n    };\n\n    toggleDone = (id) => {\n        this.setState(({ todoData }) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'done')\n            };\n        });\n    };\n\n    toggleProperty(items, id, propertyName) {\n        const itemIndex = items.findIndex((item) => item.id === id);\n        const item = items[itemIndex];\n\n        const newItem = { ...item, [propertyName]: ! item[propertyName] };\n\n        return [\n            ...items.slice(0, itemIndex),\n            newItem,\n            ...items.slice(itemIndex + 1)\n        ];\n    }\n\n    onSearchChange = (searchKeyword) => {\n        this.setState({ searchKeyword });\n    };\n\n    onFilterChange = (filter) => {\n        this.setState({ filter });\n    };\n\n    search(todoData, searchKeyword) {\n        if (! searchKeyword) {\n            return todoData;\n        }\n\n        return todoData.filter(\n            (item) => item.label.toLowerCase().includes(searchKeyword.toLowerCase())\n        );\n    }\n\n    filter(todoData, filter) {\n        switch (filter) {\n            case 'all':\n                return todoData;\n            case 'active':\n                return todoData.filter((item) => ! item.done);\n            case 'done':\n                return todoData.filter((item) => item.done);\n            default:\n                return todoData;\n        }\n    }\n\n    render() {\n\n        const { todoData, searchKeyword, filter } = this.state;\n\n        const visibleItems = this.filter(\n            this.search(todoData, searchKeyword),\n            filter\n        );\n\n        const countDone = todoData.filter((item) => item.done).length;\n        const todoCount = todoData.length - countDone;\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={todoCount} done={countDone} />\n\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel\n                        onChangeSearchInput={ this.onSearchChange }\n                        searchKeyword={ searchKeyword }\n                    />\n                    <ItemStatusFilter\n                        filter={ filter }\n                        onFilterChange={ this.onFilterChange }\n                    />\n                </div>\n\n                <AddItemForm onAddItem={ this.addItem }/>\n\n                <TodoList\n                    todoItemsData={ visibleItems }\n                    onDeleted={ this.deleteItem }\n                    onToggleImportant={ this.toggleImportant }\n                    onToggleDone={ this.toggleDone }\n                />\n            </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}