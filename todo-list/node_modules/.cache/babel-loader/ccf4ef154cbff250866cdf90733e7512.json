{"ast":null,"code":"import _objectSpread from \"/Users/sam/Documents/react-apps/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/sam/Documents/react-apps/todo/src/components/app/app.js\";\nimport React, { Component } from 'react';\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport TodoList from \"../todo-list\";\nimport ItemStatusFilter from \"../item-status-filter\";\nimport AddItemForm from \"../add-item-form\";\nimport './app.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTodoItem('Drink Coffee'), this.createTodoItem('Make Awesome App'), this.createTodoItem('Have a lunch')]\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const itemIndex = todoData.findIndex(item => item.id === id);\n        const newArray = [...todoData.slice(0, itemIndex), ...todoData.slice(itemIndex + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(({\n        todoData\n      }) => {\n        const newTodoData = [...todoData, newItem];\n        return {\n          todoData: newTodoData\n        };\n      });\n    };\n\n    this.toggleImportant = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'important')\n        };\n      });\n    };\n\n    this.toggleDone = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'done')\n        };\n      });\n    };\n\n    this.onChangeSearchInput = event => {\n      this.setState({\n        searchKeyword: event.target.value.trim()\n      });\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  toggleProperty(items, id, propertyName) {\n    const itemIndex = items.findIndex(item => item.id === id);\n    const item = items[itemIndex];\n\n    const newItem = _objectSpread({}, item, {\n      [propertyName]: !item[propertyName]\n    });\n\n    return [...items.slice(0, itemIndex), newItem, ...items.slice(itemIndex + 1)];\n  }\n\n  render() {\n    let _this$state = this.state,\n        todoData = _this$state.todoData,\n        searchKeyword = _this$state.searchKeyword;\n    const countDone = todoData.filter(item => item.done).length;\n    const todoCount = todoData.length - countDone;\n\n    if (searchKeyword) {\n      todoData = todoData.filter(item => item.label.contains(searchKeyword));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"todo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      toDo: todoCount,\n      done: countDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(SearchPanel, {\n      onChange: this.onChangeSearchInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(ItemStatusFilter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(AddItemForm, {\n      onAddItem: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      todoItemsData: todoData,\n      onDeleted: this.deleteItem,\n      onToggleImportant: this.toggleImportant,\n      onToggleDone: this.toggleDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/sam/Documents/react-apps/todo/src/components/app/app.js"],"names":["React","Component","AppHeader","SearchPanel","TodoList","ItemStatusFilter","AddItemForm","App","maxId","state","todoData","createTodoItem","deleteItem","id","setState","itemIndex","findIndex","item","newArray","slice","addItem","text","newItem","newTodoData","toggleImportant","toggleProperty","toggleDone","onChangeSearchInput","event","searchKeyword","target","value","trim","label","important","done","items","propertyName","render","countDone","filter","length","todoCount","contains"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport TodoList from \"../todo-list\";\nimport ItemStatusFilter from \"../item-status-filter\";\nimport AddItemForm from \"../add-item-form\";\n\nimport './app.css';\n\nexport default class App extends Component {\n\n    maxId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Make Awesome App'),\n            this.createTodoItem('Have a lunch')\n        ]\n    };\n\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: this.maxId++\n        };\n    }\n\n    deleteItem = (id) => {\n        this.setState(({ todoData }) => {\n            const itemIndex = todoData.findIndex((item) => item.id === id);\n\n            const newArray = [\n                ...todoData.slice(0, itemIndex),\n                ...todoData.slice(itemIndex + 1)\n            ];\n\n            return {\n                todoData: newArray\n            };\n        });\n    };\n\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text);\n\n        this.setState(( { todoData } ) => {\n            const newTodoData = [\n                ...todoData,\n                newItem\n            ];\n\n            return {\n                todoData: newTodoData\n            };\n        });\n    };\n\n    toggleImportant = (id) => {\n        this.setState(({ todoData }) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'important')\n            };\n        });\n    };\n\n    toggleDone = (id) => {\n        this.setState(({ todoData }) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'done')\n            };\n        });\n    };\n\n    toggleProperty(items, id, propertyName) {\n        const itemIndex = items.findIndex((item) => item.id === id);\n        const item = items[itemIndex];\n\n        const newItem = { ...item, [propertyName]: ! item[propertyName] };\n\n        return [\n            ...items.slice(0, itemIndex),\n            newItem,\n            ...items.slice(itemIndex + 1)\n        ];\n    }\n\n    onChangeSearchInput = (event) => {\n        this.setState({\n            searchKeyword: event.target.value.trim()\n        });\n    };\n\n    render() {\n\n        let { todoData, searchKeyword } = this.state;\n        const countDone = todoData.filter((item) => item.done).length;\n        const todoCount = todoData.length - countDone;\n\n        if (searchKeyword) {\n            todoData = todoData.filter((item) => item.label.contains(searchKeyword));\n        }\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={todoCount} done={countDone} />\n\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel onChange={ this.onChangeSearchInput } />\n                    <ItemStatusFilter />\n                </div>\n\n                <AddItemForm onAddItem={ this.addItem }/>\n\n                <TodoList\n                    todoItemsData={todoData}\n                    onDeleted={ this.deleteItem }\n                    onToggleImportant={ this.toggleImportant }\n                    onToggleDone={ this.toggleDone }\n                />\n            </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}